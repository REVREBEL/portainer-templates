{
  "version": "2",
  "templates": [
    {
      "type": 1,
      "title": "docker-registry",
      "description": "Docker image registry",
      "name": "docker-registry",
      "platform": "linux",
      "logo": "https://res.cloudinary.com/revrebel/image/upload/v1654662115/RevRebel/App%20Icons/docker_cqdtrc.svg",
      "categories": ["docker"],
      "env": [
        { "default": "996", "label": "PUID", "name": "PUID" },
        { "default": "996", "label": "PGID", "name": "PGID" },
        { "default": "America/Los_Angeles", "label": "TZ", "name": "TZ" },
        {"default": "/data", "name": "REGISTRY_STORAGE_FILESYSTEM_ROOTDIRECTORY", "label": "REGISTRY_STORAGE_FILESYSTEM_ROOTDIRECTORY"}
      ],
      "image": "registry:latest",
      "hostname": "docker-registry",
      "ports": ["5000/tcp"],
      "network": "docweb",
      "restart_policy": "unless-stopped",
      "volumes": [
        { "bind": "/var/run/docker.sock", "container": "/var/run/docker.sock", "readonly": "true" },
        { "bind": "/opt/docker/docker-registry/data", "container": "/data" },
        { "bind": "/opt/docker/docker-registry/auth", "container": "/docker-registry/auth", "readonly": "true" },
        { "bind": "/opt/docker/docker-registry/certs", "container": "/docker-registry/certs/", "readonly": "true" },
        { "bind": "/opt/docker/docker-registry/config.yml", "container": "/etc/docker/registry/config.yml", "readonly": "true" }
      ]
    },
    {
      "type": 1,
      "title": "mercure",
      "description": "Mercure is an open protocol for real-time communications designed to be fast, reliable and battery-efficient",
      "name": "mercure",
      "platform": "linux",
      "logo": "https://res.cloudinary.com/revrebel/image/upload/v1656859103/RevRebel/App%20Icons/mercure_rocks_eqtfyd.png",
      "categories": ["database"],
      "env": [
        { "label": "MERCURE_PUBLISHER_JWT_KEY", "name": "MERCURE_PUBLISHER_JWT_KEY" },
        { "label": "MERCURE_SUBSCRIBER_JWT_KEY", "name": "MERCURE_SUBSCRIBER_JWT_KEY" },
        { "default": ":80", "label": "SERVER_NAME", "name": "SERVER_NAME" },
        { "default": "1000", "label": "PUID", "name": "PUID" },
        { "default": "1000", "label": "PGID", "name": "PGID" },
        { "default": "America/Los_Angeles", "label": "TZ", "name": "TZ" }
      ],
      "image": "dunglas/mercure",
      "hostname": "mercure",
      "ports": [ "81:80/tcp", "444:443/tcp" ],
      "network": "docweb",
      "restart_policy": "unless-stopped",
      "volumes": [
        { "bind": "/var/run/docker.sock", "container": "/var/run/docker.sock", "readonly": "true" },
        { "bind": "/opt/docker/app_data/mercure_data/caddy_data", "container": "/data" },
        { "bind": "/opt/docker/app_data/mercure_data/caddy_config", "container": "/config" }
      ]
    },
    {
      "type": 1,
      "title": "portainer",
      "description": "Portainer is a lightweight management UI which allows easy management of your Docker host or Swarm cluster.",
      "name": "portainer-ee",
      "platform": "linux",
      "logo": "https://res.cloudinary.com/revrebel/image/upload/v1654662119/RevRebel/App%20Icons/porrtainer_bvgpsn.svg",
      "categories": ["portainer"],
      "env": [
        { "default": "1000", "label": "PUID", "name": "PUID" },
        { "default": "1000", "label": "PGID", "name": "PGID" },
        { "default": "America/Los_Angeles", "label": "TZ", "name": "TZ" }
      ],
      "command": "-H unix:///var/run/docker.sock",
      "image": "portainer/portainer-ee:latest",
      "hostname": "portainer",
      "ports": ["9000:9000/tcp", "9443:9443/tcp"],
      "network": "docweb",
      "restart_policy": "unless-stopped",
      "volumes": [
        { "bind": "/var/run/docker.sock", "container": "/var/run/docker.sock", "readonly": "true" },
        { "bind": "/opt/docker/app_data/portainer_data", "container": "/data" },
        { "bind": "/opt/docker/app_data/portainer_templates", "container": "/portainer_templates" }
      ],
      "interactive": "true"
    },    
    {
      "type": 1,
      "title": "mariadb",
      "description": "Performance beyond MySQL",
      "name": "mariadb",
      "platform": "linux",
      "logo": "https://res.cloudinary.com/revrebel/image/upload/v1654662116/RevRebel/App%20Icons/mariadb_aiagr6.svg",
      "categories": ["database"],
      "env": [
        { "name": "MYSQL_ROOT_PASSWORD", "label": "Root password" },
        { "default": "1000", "label": "PUID", "name": "PUID" },
        { "default": "1000", "label": "PGID", "name": "PGID" },
        { "default": "America/Los_Angeles", "label": "TZ", "name": "TZ" }
      ],
      "image": "mariadb:latest",
      "hostname": "mariadb",
      "ports": ["3306/tcp"],
      "network": "docweb",
      "restart_policy": "unless-stopped",
      "volumes": [{"container": "/var/lib/mysql"}]
    },
    {
      "type": 1,
      "title": "redis-commander",
      "description": "Redis web management tool written in node.js.",
      "name": "redis-commander",
      "platform": "linux",
      "logo": "https://res.cloudinary.com/revrebel/image/upload/v1654662116/RevRebel/App%20Icons/rediscommander_gmjlpb.svg",
      "categories": ["database"],
      "env": [
        { "default": "1000", "label": "PUID", "name": "PUID" },
        { "default": "1000", "label": "PGID", "name": "PGID" },
        { "default": "America/Los_Angeles", "label": "TZ", "name": "TZ" }
      ],
      "image": "rediscommander/redis-commander:latest",
      "hostname": "redis-commander",
      "ports": ["8081/tcp"],
      "network": "docweb",
      "restart_policy": "unless-stopped"
    },
      {
        "type": 1,
        "title": "redis",
        "description": "Open-source in-memory data structure store",
        "name": "redis",
        "platform": "linux",
        "logo": "https://res.cloudinary.com/revrebel/image/upload/v1654662118/RevRebel/App%20Icons/redis_qfjfpj.svg",
        "categories": [ "database" ],
        "env": [
          { "default": "996", "label": "PUID", "name": "PUID" },
          { "default": "996", "label": "PGID", "name": "PGID" },
          { "default": "America/Los_Angeles", "label": "TZ", "name": "TZ" }
        ],
        "image": "redis:latest",
        "hostname": "redis",
        "ports": ["6379/tcp"],
        "network": "docweb",
        "restart_policy": "unless-stopped",
        "volumes": [
          { "bind": "/opt/docker/app_data/redis_data/redis_data", "container": "/data" },
          { "bind": "/opt/docker/app_data/redis_data/config/redis.conf", "container": "/etc/redis/redis.conf" }
        ]
      },
      {
        "type": 1,
        "title": "nginx-proxy-manager",
        "description": "Nginx Proxy Manager enables you to easily forward to your websites running at home or otherwise, including free SSL, without having to know too much about Nginx or Letsencrypt.",
        "name": "nginx-proxy-manager",
        "platform": "linux",
        "logo": "https://res.cloudinary.com/revrebel/image/upload/v1656859103/RevRebel/App%20Icons/nginx-proxy_guswuc.png",
        "categories": [ "docker" ],
        "env": [
          { "default": "1000", "label": "PUID", "name": "PUID" },
          { "default": "1000", "label": "PGID", "name": "PGID" },
          { "default": "America/Los_Angeles", "label": "TZ", "name": "TZ" }
        ],
        "image": "jlesage/nginx-proxy-manager",
        "hostname": "nginx-proxy-manager",
        "ports": ["80:8080/tcp", "81:8181/tcp", "443:4443/tcp"],
        "network": "docweb",
        "restart_policy": "unless-stopped",
        "volumes": [ {"container": "/config","bind":"/opt/docker/app_data/nginx-proxy_data/nginx-proxy"} ]
     },
      {
        "type": 1,
        "title": "sematext docker agent",
        "description": "Collect logs, metrics and docker events",
        "name": "sematext-docker-agent",
        "platform": "linux",
        "logo": "https://res.cloudinary.com/revrebel/image/upload/v1656859103/RevRebel/App%20Icons/sematext_strgkc.png",
        "categories": [ "log management", "monitoring" ],
        "cap_add:": "- SYS_ADMIN",
          "env": [
		    {
			"select": ["LOGSENE_TOKEN", "SPM_TOKEN", "INFRA_TOKEN"],
			"token": [{"default": "1234", "name": "TOKEN", "label": "TOKEN" }]
			 },
	    { "name": "SERVER_BASE_URL", "label": "SERVER_BASE_URL" },        
            { "name": "LOGS_RECEIVER_URL", "label": "LOGS_RECEIVER_URL" },
            { "name": "EVENT_RECEIVER_URL", "label": "EVENT_RECEIVER_URL" },  
            { "name": "COMMAND_SERVER_URL", "label": "COMMAND_SERVER_URL" },  
            { "default": "1000", "label": "PUID", "name": "PUID" },
            { "default": "1000", "label": "PGID", "name": "PGID" },
            { "default": "America/Los_Angeles", "label": "TZ", "name": "TZ" }
      ],
      "image": "sematext/sematext-agent-docker:latest",
      "hostname": "sematext-docker-agent",
      "privileged": true,
      "ports": ["5387/tcp"],
      "network": "docweb",
      "restart_policy": "unless-stopped",
      "volumes": [
	{ "container": "/var/run/docker", "bind": "/var/run/docker.sock", "readonly": "true" },
 	{ "container": "/var/run", "bind": "/var/run" },
        { "container": "etc/passwd", "bind": "etc/passwd", "readonly": "true"  },
        { "container": "/etc/group", "bind": "/etc/group", "readonly": "true" },
        { "container": "/sys/kernel/debug", "bind": "/sys/kernel/debug" },
        { "container": "/sys", "bind": "/host/sys" },
        { "container": "/dev", "bind": "/hostfs/dev" },
        { "container": "/sys", "bind": "/host/sys", "readonly": "true" }
      ]
    },
    {
      "type": 1,
      "title": "ghost",
      "description": "Free and open-source blogging platform",
      "name": "ghost",
      "platform": "linux",
      "logo": "https://res.cloudinary.com/revrebel/image/upload/v1654662115/RevRebel/App%20Icons/ghostblog_nnw0ec.svg",
      "categories": [ "blog" ],
      "note": "Access the blog management interface under <code>/ghost/</code>.",
      "env": [
        { "default": "1000", "label": "PUID", "name": "PUID" },
        { "default": "1000", "label": "PGID", "name": "PGID" },
        { "default": "America/Los_Angeles", "label": "TZ", "name": "TZ" }
      ],
      "image": "ghost:latest",
      "hostname": "ghost",
      "ports": [ "2368/tcp" ],
      "network": "docweb",
      "restart_policy": "unless-stopped",
      "volumes": [{ "container": "/var/lib/ghost/content" }]
    },
    
    {
      "type": 1,
      "title": "apprise api ",
      "description": "Apprise API - Push Notifications that work with just about every platform!",
      "name": "apprise-api",
      "platform": "linux",
      "logo": "https://res.cloudinary.com/revrebel/image/upload/v1656859064/RevRebel/App%20Icons/apprise_jae18p.png",
      "categories": ["messaging"],
      "env": [
        { "default": "./config", "label": "APPRISE_CONFIG_DIR", "name": "APPRISE_CONFIG_DIR" },
        { "default": "simple", "label": "APPRISE_STATEFUL_MODE", "name": "APPRISE_STATEFUL_MODE" },
        { "label": "SECRET_KEY", "name": "SECRET_KEY" },
        { "default": "apprise.domain.com", "label": "BASE_URL", "name": "BASE_URL" },
        { "default": "debug", "label": "LOG_LEVEL", "name": "LOG_LEVEL" },
        { "default": "1000", "label": "PUID", "name": "PUID" },
        { "default": "1000", "label": "PGID", "name": "PGID" },
        { "default": "America/Los_Angeles", "label": "TZ", "name": "TZ" }
      ],
      "image": "linuxserver/apprise-api",
      "hostname": "apprise-api",
      "ports": ["8000/tcp"],
      "network": "docweb",
      "restart_policy": "unless-stopped",
      "volumes": [{ "bind": "/opt/docker/app_data/apprise_data/config", "container": "/config" }]
    },
    {
      "type": 1,
      "title": "authelia",
      "description": "An open-source authentication and authorization server providing 2-factor authentication and single sign-on (SSO) for your applications via a web portal.",
      "name": "authelia",
      "platform": "linux",
      "logo": "https://res.cloudinary.com/revrebel/image/upload/v1656859064/RevRebel/App%20Icons/authelia_wwp9xc.png",
      "categories": [ "other", "tools", "authentication" ],
      "note": "Make sure you complete the: configuration.yml. Docs @ <a href='https://docs.authelia.com/deployment/deployment-ha'>clickhere</a>.",
      "env": [
        { "label": "AUTHELIA_JWT_SECRET_FILE", "name": "AUTHELIA_JWT_SECRET_FILE" },
        { "label": "AUTHELIA_SESSION_SECRET_FILE", "name": "AUTHELIA_SESSION_SECRET_FILE" }, 
        { "label": "AUTHELIA_NOTIFIER_SMTP_PASSWORD_FILE", "name": "AUTHELIA_NOTIFIER_SMTP_PASSWORD_FILE" },
        { "label": "AUTHELIA_DUO_API_SECRET_KEY_FILE", "name": "AUTHELIA_DUO_API_SECRET_KEY_FILE" },
        { "label": "AUTHELIA_STORAGE_ENCRYPTION_KEY_FILE", "name": "AUTHELIA_STORAGE_ENCRYPTION_KEY_FILE" },
        { "label": "AUTHELIA_STORAGE_MYSQL_PASSWORD_FILE", "name": "AUTHELIA_STORAGE_MYSQL_PASSWORD_FILE" },
        { "default": "apprise.revrebel.app", "label": "BASE_URL", "name": "BASE_URL" },
        { "default": "debug", "label": "LOG_LEVEL", "name": "LOG_LEVEL" },
        { "default": "1000", "label": "PUID", "name": "PUID" },
        { "default": "1000", "label": "PGID", "name": "PGID" },
        { "default": "America/Los_Angeles", "label": "TZ", "name": "TZ" }
      ],
      "image": "authelia/authelia:latest",
      "hostname": "authelia",
      "ports": [ "9091:9091/tcp" ],
      "network": "docweb",
      "restart_policy": "unless-stopped",
      "volumes": [
        { "container": "/etc/authelia/", "bind": "/opt/docker/app_data/authelia_data/data" },
        { "container": "/config", "bind": "/opt/docker/app_data/authelia_data/config" }
      ]
    },
    {
      "type": 1,
      "title": "wikijs",
      "description": "Wikijs A modern, lightweight and powerful wiki app built on NodeJS.",  
      "name": "wikijs",
      "platform": "linux",
      "logo": "https://res.cloudinary.com/revrebel/image/upload/v1656859103/RevRebel/App%20Icons/wikijs_enptbu.png",
      "categories": [ "other", "tools" ],
      "env": [
        { "default": "1000", "label": "PUID", "name": "PUID" },
        { "default": "1000", "label": "PGID", "name": "PGID" },
        { "default": "America/Los_Angeles", "label": "TZ", "name": "TZ" }
      ],
      "image": "lscr.io/linuxserver/wikijs:latest",
      "hostname": "wikijs",
      "ports": [ "3100:3000/tcp" ],
      "network": "docweb",
      "restart_policy": "unless-stopped",
      "volumes": [
        { "container": "/config", "bind": "/opt/docker/app_data/wikijs_data/config" },
        { "container": "/data", "bind": "/opt/docker/app_data/wikijs_data/data" }
      ]
    },
    {
      "type": 1,
      "title": "syncthing",
      "description": "Syncthing is a continuous file synchronization program. It synchronizes files between two or more computers in real-time, safely protected from prying eyes.",
      "name": "syncthing",
      "platform": "linux",
      "logo": "https://res.cloudinary.com/revrebel/image/upload/v1656859103/RevRebel/App%20Icons/syncthing_ip0kuq.png",
      "categories": [ "backup", "cloud", "other", "tools" ],
      "env": [
        { "default": "1000", "label": "PUID", "name": "PUID" },
        { "default": "1000", "label": "PGID", "name": "PGID" },
        { "default": "America/Los_Angeles", "label": "TZ", "name": "TZ" }
      ],
      "image": "lscr.io/linuxserver/syncthing:latest",
      "hostname": "wikijs",
      "ports": [ "8384:8384/tcp", "21027:21027/udp", "22000:22000/tcp" ],
      "network": "docweb",
      "restart_policy": "unless-stopped",
      "volumes": [
        { "container": "/config", "bind": "/opt/docker/app_data/syncthing_data/config" },
        { "container": "/sync" }
      ]
    },
    
    {
      "type": 1,
      "title": "rabbitmq",
      "description": "Highly reliable enterprise messaging system",
      "name": "rabbitmq",
      "platform": "linux",
      "logo": "https://res.cloudinary.com/revrebel/image/upload/v1656859102/RevRebel/App%20Icons/rabbitmq_jv7478.png",
      "categories": [ "messaging" ],
      "env": [
        { "default": "1000", "label": "PUID", "name": "PUID" },
        { "default": "1000", "label": "PGID", "name": "PGID" },
        { "default": "America/Los_Angeles", "label": "TZ", "name": "TZ" }
      ],
      "image": "rabbitmq:latest",
      "hostname": "rabbitmq",
      "ports": [ "5671/tcp", "5672/tcp" ],
      "network": "docweb",
      "restart_policy": "unless-stopped",
      "volumes": [{ "container": "/var/lib/rabbitmq", "bind": "/opt/docker/app_data/rabbitmq_data/data" }]
    }
  ]
}
